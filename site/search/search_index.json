{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to imgtool Docs A powerful and fast CLI tool for image processing, built with Go, Cobra, and Viper. Link : https://github.com/PrathamGhaywat/imgtool Warning Some of the features mentioned might not be available yet, since this is a work in progress. Please open an issue if you have any suggestions. Features Format Conversion : Convert images between png , jpg , gif , and webp . Quality Adjustment : Set the quality for lossy formats like jpg and webp . Image Resizing : Resize images using specific dimensions or by a percentage. Watermarking : Apply a watermark image with adjustable opacity. Batch Processing : Process a single file or an entire directory. Concurrency : Use multiple workers for faster processing.","title":"Home"},{"location":"#welcome-to-imgtool-docs","text":"A powerful and fast CLI tool for image processing, built with Go, Cobra, and Viper. Link : https://github.com/PrathamGhaywat/imgtool","title":"Welcome to imgtool Docs"},{"location":"#warning","text":"Some of the features mentioned might not be available yet, since this is a work in progress. Please open an issue if you have any suggestions.","title":"Warning"},{"location":"#features","text":"Format Conversion : Convert images between png , jpg , gif , and webp . Quality Adjustment : Set the quality for lossy formats like jpg and webp . Image Resizing : Resize images using specific dimensions or by a percentage. Watermarking : Apply a watermark image with adjustable opacity. Batch Processing : Process a single file or an entire directory. Concurrency : Use multiple workers for faster processing.","title":"Features"},{"location":"configuration/","text":"Configuration You can set default values for any flag in the config.yaml file. The tool looks for this file in the current directory or your home directory. Example config.yaml : # Default configuration for imgtool to: \"webp\" quality: 75 watermark: \"C:/Users/YourUser/Pictures/watermark.png\" watermark-opacity: 60 workers: 8","title":"Configuration"},{"location":"configuration/#configuration","text":"You can set default values for any flag in the config.yaml file. The tool looks for this file in the current directory or your home directory. Example config.yaml : # Default configuration for imgtool to: \"webp\" quality: 75 watermark: \"C:/Users/YourUser/Pictures/watermark.png\" watermark-opacity: 60 workers: 8","title":"Configuration"},{"location":"features/","text":"Features Format Conversion : Convert images between png , jpg , gif , and webp . Quality Adjustment : Set the quality for lossy formats like jpg and webp . Image Resizing : Resize images using specific dimensions (e.g., 800x600 ) or by a percentage (e.g., 50% ). Aspect ratio is preserved if one dimension is set to 0 . Watermarking : Apply a watermark image with adjustable opacity. Batch Processing : Process a single file or an entire directory of images. Concurrency : Use multiple workers for faster directory processing. Configuration : Set default flag values using a config.yaml file.","title":"Features"},{"location":"features/#features","text":"Format Conversion : Convert images between png , jpg , gif , and webp . Quality Adjustment : Set the quality for lossy formats like jpg and webp . Image Resizing : Resize images using specific dimensions (e.g., 800x600 ) or by a percentage (e.g., 50% ). Aspect ratio is preserved if one dimension is set to 0 . Watermarking : Apply a watermark image with adjustable opacity. Batch Processing : Process a single file or an entire directory of images. Concurrency : Use multiple workers for faster directory processing. Configuration : Set default flag values using a config.yaml file.","title":"Features"},{"location":"installation/","text":"Installation Windows Install the release from here . Then add the folder in which the executable is present in your PATH environment variable. Linux and macOS We are currently searching for a way to make the tool available for Linux and macOS. Please open an issue if you have any suggestions. If you would still like to use the tool on Linux and macOS, you can build it from the source. Build To build the tool from the source, you'll need to have Go installed. # Clone the repository git clone https://github.com/PrathamGhaywat/imgtool.git cd imgtool # Download dependencies go mod tidy # Build the executable go build -o imgtool.exe .","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#windows","text":"Install the release from here . Then add the folder in which the executable is present in your PATH environment variable.","title":"Windows"},{"location":"installation/#linux-and-macos","text":"We are currently searching for a way to make the tool available for Linux and macOS. Please open an issue if you have any suggestions. If you would still like to use the tool on Linux and macOS, you can build it from the source.","title":"Linux and macOS"},{"location":"installation/#build","text":"To build the tool from the source, you'll need to have Go installed. # Clone the repository git clone https://github.com/PrathamGhaywat/imgtool.git cd imgtool # Download dependencies go mod tidy # Build the executable go build -o imgtool.exe .","title":"Build"},{"location":"usage/convert/","text":"Convert Command The convert command is the primary tool for all image processing tasks. .\\imgtool.exe convert [input_path] [output_path] [flags] Arguments input_path : The path to the source image or directory. output_path (optional): The path for the output file or directory. If omitted for a single file, the output will be saved in the same directory with the new format extension. Flags --to <format> : The target format ( png , jpg , gif , webp ). Default: png . --quality <int> : Image quality for jpg / webp (1-100). Default: 80 . --resize <string> : Resize dimensions (e.g., \"800x600\" or \"50%\" ). --watermark <path> : Path to the watermark image. --watermark-opacity <int> : Watermark opacity (0-100). Default: 100 . --mode <string> : Processing mode ( single or dir ). Default: single . --recursive : Recursively process subdirectories in dir mode. --workers <int> : Number of concurrent workers for dir mode. Default: 4 . Examples Convert a PNG to a high-quality JPG bash .\\imgtool.exe convert input.png output.jpg --to jpg --quality 95 Resize an image to 50% of its original size bash .\\imgtool.exe convert big.jpg small.jpg --resize \"50%\" Apply a watermark to an image bash .\\imgtool.exe convert photo.png watermarked.png --watermark logo.png --watermark-opacity 70 Process an entire directory of images This command converts all images in the input-folder to webp and saves them in output-folder . bash .\\imgtool.exe convert input-folder output-folder --mode dir --to webp","title":"Convert Command"},{"location":"usage/convert/#convert-command","text":"The convert command is the primary tool for all image processing tasks. .\\imgtool.exe convert [input_path] [output_path] [flags]","title":"Convert Command"},{"location":"usage/convert/#arguments","text":"input_path : The path to the source image or directory. output_path (optional): The path for the output file or directory. If omitted for a single file, the output will be saved in the same directory with the new format extension.","title":"Arguments"},{"location":"usage/convert/#flags","text":"--to <format> : The target format ( png , jpg , gif , webp ). Default: png . --quality <int> : Image quality for jpg / webp (1-100). Default: 80 . --resize <string> : Resize dimensions (e.g., \"800x600\" or \"50%\" ). --watermark <path> : Path to the watermark image. --watermark-opacity <int> : Watermark opacity (0-100). Default: 100 . --mode <string> : Processing mode ( single or dir ). Default: single . --recursive : Recursively process subdirectories in dir mode. --workers <int> : Number of concurrent workers for dir mode. Default: 4 .","title":"Flags"},{"location":"usage/convert/#examples","text":"Convert a PNG to a high-quality JPG bash .\\imgtool.exe convert input.png output.jpg --to jpg --quality 95 Resize an image to 50% of its original size bash .\\imgtool.exe convert big.jpg small.jpg --resize \"50%\" Apply a watermark to an image bash .\\imgtool.exe convert photo.png watermarked.png --watermark logo.png --watermark-opacity 70 Process an entire directory of images This command converts all images in the input-folder to webp and saves them in output-folder . bash .\\imgtool.exe convert input-folder output-folder --mode dir --to webp","title":"Examples"},{"location":"usage/getting-started/","text":"Getting Started General Help To see a list of all available commands and flags: .\\imgtool.exe --help","title":"Getting Started"},{"location":"usage/getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"usage/getting-started/#general-help","text":"To see a list of all available commands and flags: .\\imgtool.exe --help","title":"General Help"}]}